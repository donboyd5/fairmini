---
output: html_document
editor_options:
  chunk_output_type: console
---

# Equation 1 â€“ log of real per-capita consumer expenditures on services

{{< include _setup.qmd >}}

{{< include _load_data.qmd >}}

```{r}
#| label: constants

# AA AG1, AG2, AG3 C, C2 CS POP RS YD
vars <- c("AA", "C", "C2", "CS", "POP", "RS", "YD")


```

```{r}
#| label: eq
#| output: false

data1 <- fmdata |> 
  filter(vname %in% vars) |> 
  bind_rows(fmages)
count(data1, vname) # AA, CS, POP, RS, YD

data2 <- data1 |> 
  select(-c(start, end)) |> 
  unnest(cols = data) |> 
  pivot_wider(names_from = vname) |> 
  arrange(date) |> 
  mutate(aa_pop = AA / POP,
         cs_pop = CS / POP,
         yda_pop = YD / POP,
         ln_cs_pop = log(cs_pop),
         ln_aa_pop_l1 = lag(log(aa_pop)),
         ln_cs_pop_l1 = lag(ln_cs_pop),
         ln_yda_pop = log(yda_pop),
         idx = row_number(),
         C = 1,
         C2 = case_when(
           date < T1 ~ 0,
           date < T2 ~ idx - idx[date == T1],
           date >= T2 ~ idx[date == T2] - idx[date == T1],
           .default = NA_real_)) |> 
  # get additional lagged values possibly needed for instrumental variables
  mutate(ln_cs_pop_l2  = lag(ln_cs_pop, 2),
         RS_l1         = lag(RS)) |> 
  na.omit() |>  # drop any row that has an NA in any variable
  filter(date >= smpl$start,
         date <= smpl$end)
summary(data2)

```

## Estimation and results

```{r}
#| label: eq-estimation
#| output: true

formula <- ln_cs_pop ~ C2 + AG1 + AG2 + AG3 + ln_cs_pop_l1 + ln_yda_pop + RS + ln_aa_pop_l1
instruments <- ~ C2 + AG1 + AG2 + AG3 + ln_cs_pop_l2 + ln_yda_pop + RS_l1 + ln_aa_pop_l1

# Apply AR(1) correction with damping
results <- ar1_correction(
  data = data2,
  formula = formula,
  instruments = instruments,
  max_iter = 1000,
  tol = 1e-5,
  damp_factor = 0.5  # Adjust damping factor as needed
)

# View results
summary(results$fit)  # Final 2SLS model

```

## Fair's results for the equation

![](images/clipboard-3503997208.png)

## Details and diagnostics

```{r}
#| label: diagnostics
#| output: true

results[!names(results) %in% "fit"]

# Diagnostic checks
# Plot residuals over time
plot(residuals(results$fit), type = "l", main = "Residuals Over Time", xlab = "Time", ylab = "Residuals")

# ACF of residuals
acf(residuals(results$fit), main = "ACF of Residuals")

```

```{r stop_here, echo=FALSE}
knitr::knit_exit()
```
